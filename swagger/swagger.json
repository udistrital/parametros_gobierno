{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/area_conocimiento/": {
            "get": {
                "tags": [
                    "area_conocimiento"
                ],
                "description": "get AreaConocimiento",
                "operationId": "AreaConocimientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AreaConocimiento"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "area_conocimiento"
                ],
                "description": "create AreaConocimiento",
                "operationId": "AreaConocimientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AreaConocimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AreaConocimiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AreaConocimiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/area_conocimiento/{id}": {
            "get": {
                "tags": [
                    "area_conocimiento"
                ],
                "description": "get AreaConocimiento by id",
                "operationId": "AreaConocimientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AreaConocimiento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "area_conocimiento"
                ],
                "description": "update the AreaConocimiento",
                "operationId": "AreaConocimientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AreaConocimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AreaConocimiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AreaConocimiento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "area_conocimiento"
                ],
                "description": "delete the AreaConocimiento",
                "operationId": "AreaConocimientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/nucleo_basico_conocimiento/": {
            "get": {
                "tags": [
                    "nucleo_basico_conocimiento"
                ],
                "description": "get NucleoBasicoConocimiento",
                "operationId": "NucleoBasicoConocimientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NucleoBasicoConocimiento"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "nucleo_basico_conocimiento"
                ],
                "description": "create NucleoBasicoConocimiento",
                "operationId": "NucleoBasicoConocimientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NucleoBasicoConocimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NucleoBasicoConocimiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NucleoBasicoConocimiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/nucleo_basico_conocimiento/{id}": {
            "get": {
                "tags": [
                    "nucleo_basico_conocimiento"
                ],
                "description": "get NucleoBasicoConocimiento by id",
                "operationId": "NucleoBasicoConocimientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NucleoBasicoConocimiento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "nucleo_basico_conocimiento"
                ],
                "description": "update the NucleoBasicoConocimiento",
                "operationId": "NucleoBasicoConocimientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NucleoBasicoConocimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NucleoBasicoConocimiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NucleoBasicoConocimiento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "nucleo_basico_conocimiento"
                ],
                "description": "delete the NucleoBasicoConocimiento",
                "operationId": "NucleoBasicoConocimientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/rup_especialidad/": {
            "get": {
                "tags": [
                    "rup_especialidad"
                ],
                "description": "get RupEspecialidad",
                "operationId": "RupEspecialidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupEspecialidad"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "rup_especialidad"
                ],
                "description": "create RupEspecialidad",
                "operationId": "RupEspecialidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RupEspecialidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RupEspecialidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RupEspecialidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/rup_especialidad/{id}": {
            "get": {
                "tags": [
                    "rup_especialidad"
                ],
                "description": "get RupEspecialidad by id",
                "operationId": "RupEspecialidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupEspecialidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "rup_especialidad"
                ],
                "description": "update the RupEspecialidad",
                "operationId": "RupEspecialidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RupEspecialidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RupEspecialidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupEspecialidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rup_especialidad"
                ],
                "description": "delete the RupEspecialidad",
                "operationId": "RupEspecialidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/rup_grupo/": {
            "get": {
                "tags": [
                    "rup_grupo"
                ],
                "description": "get RupGrupo",
                "operationId": "RupGrupoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupGrupo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "rup_grupo"
                ],
                "description": "create RupGrupo",
                "operationId": "RupGrupoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RupGrupo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RupGrupo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RupGrupo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/rup_grupo/{id}": {
            "get": {
                "tags": [
                    "rup_grupo"
                ],
                "description": "get RupGrupo by id",
                "operationId": "RupGrupoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupGrupo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "rup_grupo"
                ],
                "description": "update the RupGrupo",
                "operationId": "RupGrupoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RupGrupo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RupGrupo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupGrupo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rup_grupo"
                ],
                "description": "delete the RupGrupo",
                "operationId": "RupGrupoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/rup_tipo_especialidad/": {
            "get": {
                "tags": [
                    "rup_tipo_especialidad"
                ],
                "description": "get RupTipoEspecialidad",
                "operationId": "RupTipoEspecialidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupTipoEspecialidad"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "rup_tipo_especialidad"
                ],
                "description": "create RupTipoEspecialidad",
                "operationId": "RupTipoEspecialidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RupTipoEspecialidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RupTipoEspecialidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RupTipoEspecialidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/rup_tipo_especialidad/{id}": {
            "get": {
                "tags": [
                    "rup_tipo_especialidad"
                ],
                "description": "get RupTipoEspecialidad by id",
                "operationId": "RupTipoEspecialidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupTipoEspecialidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "rup_tipo_especialidad"
                ],
                "description": "update the RupTipoEspecialidad",
                "operationId": "RupTipoEspecialidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RupTipoEspecialidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RupTipoEspecialidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RupTipoEspecialidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rup_tipo_especialidad"
                ],
                "description": "delete the RupTipoEspecialidad",
                "operationId": "RupTipoEspecialidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AreaConocimiento": {
            "title": "AreaConocimiento",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.NucleoBasicoConocimiento": {
            "title": "NucleoBasicoConocimiento",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "AreaConocimientoId": {
                    "$ref": "#/definitions/models.AreaConocimiento"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RupEspecialidad": {
            "title": "RupEspecialidad",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "RupTipoEspecialidadId": {
                    "$ref": "#/definitions/models.RupTipoEspecialidad"
                }
            }
        },
        "models.RupGrupo": {
            "title": "RupGrupo",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "RupTipoEspecialidadId": {
                    "$ref": "#/definitions/models.RupTipoEspecialidad"
                }
            }
        },
        "models.RupTipoEspecialidad": {
            "title": "RupTipoEspecialidad",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "nucleo_basico_conocimiento",
            "description": "NucleoBasicoConocimientoController operations for NucleoBasicoConocimiento\n"
        },
        {
            "name": "rup_tipo_especialidad",
            "description": "RupTipoEspecialidadController operations for RupTipoEspecialidad\n"
        },
        {
            "name": "rup_especialidad",
            "description": "RupEspecialidadController operations for RupEspecialidad\n"
        },
        {
            "name": "rup_grupo",
            "description": "RupGrupoController operations for RupGrupo\n"
        },
        {
            "name": "area_conocimiento",
            "description": "AreaConocimientoController operations for AreaConocimiento\n"
        }
    ]
}